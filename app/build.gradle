import java.nio.file.Paths

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.devtools.ksp'
apply plugin: 'dagger.hilt.android.plugin'

def gitCommitCount = Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())
def sdk = 34

android {
    compileSdk sdk
    buildToolsVersion = '34.0.0'
    ndkVersion '25.2.9519653'

    defaultConfig {
        applicationId 'me.gm.cleaner.plugin'
        minSdk 29
        targetSdk sdk
        versionCode gitCommitCount
        versionName 'beta10'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled false
        resourceConfigurations += ['en', 'zh-rCN', 'zh-rTW']
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "Media Provider Manager_${defaultConfig.versionName}-${variant.buildType.name}.apk"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    packagingOptions {
        resources {
            excludes += ['/META-INF/**', '/kotlin/**', '/okhttp3/**']
        }
        jniLibs {
            excludes += ['**/liblog.so']
            useLegacyPackaging false
        }
    }
    buildFeatures {
        viewBinding true
        aidl true
    }
    lint {
        checkDependencies true
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    namespace 'me.gm.cleaner.plugin'
}

def optimizeReleaseRes() {
    def aapt2 = Paths.get(project.android.sdkDirectory.path, 'build-tools', project.android.buildToolsVersion, 'aapt2')
    def zip = Paths.get(project.buildDir.path, 'intermediates', 'optimized_processed_res', 'release', "resources-release-optimize.ap_")
    def optimized = new File("${zip}.opt")
    def cmd = exec {
        commandLine aapt2, 'optimize',
                '--collapse-resource-names',
                '-o', optimized, zip
        ignoreExitValue false
    }
    if (cmd.exitValue == 0) {
        delete(zip)
        optimized.renameTo("$zip")
    }
}

afterEvaluate {
    optimizeReleaseResources.doLast {
        optimizeReleaseRes()
    }
}

dependencies {
    compileOnly 'de.robv.android.xposed:api:82'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.google.android.material:material:1.11.0-alpha02'
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"
    def lifecycleVersion = '2.6.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    def roomVersion = '2.5.2'
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    ksp "androidx.room:room-compiler:$roomVersion"
    def kotlinxCoroutinesVersion = '1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesVersion"
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    // https://issuetracker.google.com/issues/179057202
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    def glideVersion = '4.16.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    ksp "com.github.bumptech.glide:ksp:$glideVersion"
    def media3Version = '1.1.0'
    implementation "androidx.media3:media3-exoplayer:$media3Version"
    implementation "androidx.media3:media3-ui:$media3Version"

    implementation 'com.google.code.gson:gson:2.10.1'
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    implementation 'org.lsposed.hiddenapibypass:hiddenapibypass:4.3'
    def appIconLoaderVersion = '1.5.0'
    implementation "me.zhanghai.android.appiconloader:appiconloader:$appIconLoaderVersion"
    implementation "me.zhanghai.android.appiconloader:appiconloader-glide:$appIconLoaderVersion"
    implementation 'dev.rikka.rikkax.recyclerview:recyclerview-ktx:1.3.2'
    implementation 'com.drakeet.drawer:drawer:1.0.3'
    implementation 'me.zhanghai.android.fastscroll:library:1.3.0'
    implementation project(':photoview')
    def markwonVersion = '4.6.2'
    implementation "io.noties.markwon:core:$markwonVersion"
    implementation "io.noties.markwon:ext-strikethrough:$markwonVersion"
    implementation "io.noties.markwon:html:$markwonVersion"
    implementation "io.noties.markwon:image:$markwonVersion"
    implementation 'com.caverock:androidsvg:1.4'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.25'
}
